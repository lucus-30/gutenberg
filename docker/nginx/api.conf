worker_processes  auto;
worker_rlimit_nofile 200000;

events {
  worker_connections  4000;
  use epoll;
  multi_accept on;
}

http {
  proxy_cache_path  /var/cache/nginx/cache levels=1:2 keys_zone=cache:8m max_size=3000m inactive=600m;
  proxy_temp_path /var/tmp;

  open_file_cache max=200000 inactive=5s; 
  open_file_cache_valid 15s; 
  open_file_cache_min_uses 1;
  open_file_cache_errors off;

  default_type  application/octet-stream;
  sendfile          on;
  tcp_nopush        on;
  tcp_nodelay       on;

  gzip              on;
  gzip_disable "msie6";
  gzip_vary         on;
  gzip_proxied     any;
  gzip_comp_level    6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 1000;
  gzip_types
    application/json
    application/javascript
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font application/x-font-opentype
    application/x-font-otf
    application/x-font-truetype
    application/x-font-ttf
    application/x-javascript
    application/xhtml+xml
    application/xml
    font/opentype
    font/otf
    font/ttf
    image/svg+xml
    image/x-icon
    text/css
    text/javascript
    text/plain
    text/xml;
  
  # Brotli Settings
  # brotli on;
  # brotli_comp_level 4;
  # brotli_buffers 32 8k;
  # brotli_min_length 100;
  # brotli_static on;
  # brotli_types 
  #   image/jpeg
  #   image/bmp
  #   image/svg+xml
  #   text/plain
  #   text/css
  #   application/json
  #   application/javascript
  #   application/x-javascript
  #   text/xml
  #   application/xml
  #   application/xml+rss
  #   text/javascript
  #   image/x-icon;

  upstream backend {
    server nodejs:3000;
    keepalive 20;
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }
  
  server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    
    ssl_certificate /etc/nginx/certs/intranet.local.pem;
    ssl_certificate_key /etc/nginx/certs/intranet.local-key.pem;

    root /var/www/html;
    server_name gutenberg.local;
    client_max_body_size 16M;
    keepalive_timeout 10;
    reset_timedout_connection on;
    access_log off;

    location / {
      try_files $uri @nodejs; 
    }
    
    location @nodejs {
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_pass http://backend;
      proxy_redirect off;

      proxy_cache                 cache;
      add_header X-Proxy-Cache    $upstream_cache_status;
      proxy_ignore_headers        Cache-Control;
      proxy_cache_revalidate      on;
      proxy_cache_valid 200 206   5s;
      proxy_cache_lock            on;
      proxy_cache_use_stale       updating error timeout http_500 http_502 http_503 http_504;
      proxy_cache_bypass $cookie_nocache $arg_nocache $http_pragma;
      proxy_no_cache $http_pragma $http_authorization;
    }
  }
}